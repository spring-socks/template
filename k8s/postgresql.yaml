apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demo-db
  labels:
    app.kubernetes.io/part-of: demo-db
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-db
  labels:
    app.kubernetes.io/part-of: demo-db
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: demo-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: demo-db
    spec:
      initContainers:
      - name: remove-lost-found
        image: busybox
        command:
        - sh
        - -c
        - |
          rm -fr /var/lib/postgresql/data/lost+found
        volumeMounts:
        - name: demo-db
          mountPath: /var/lib/postgresql/data
      containers:
      - image: bitnami/postgresql:14
        name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: demo-db
              key: database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: demo-db
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: demo-db
              key: password
        ports:
        - containerPort: 5432
          name: demo-db
        volumeMounts:
        - name: demo-db
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: demo-db
        persistentVolumeClaim:
          claimName: demo-db
---
apiVersion: v1
kind: Service
metadata:
  name: demo-db
  labels:
    app.kubernetes.io/part-of: demo-db
spec:
  ports:
  - port: 5432
  selector:
    app.kubernetes.io/part-of: demo-db
---
apiVersion: v1
kind: Secret
metadata:
  name: demo-db
  labels:
    app.kubernetes.io/part-of: demo-db
type: servicebinding.io/postgresql
stringData:
  type: postgresql
  host: demo-db
  port: "5432"
  username: socks
  password: socks
  database: dbname
